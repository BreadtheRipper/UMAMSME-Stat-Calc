# stat_planner/exporter.py

from pptx import Presentation
from pptx.util import Inches
from io import BytesIO
import matplotlib.pyplot as plt

def export_run_summary(history, ideal_stats, trainee_name, trainee_photo_path=None):
    prs = Presentation()
    # Title slide
    slide = prs.slides.add_slide(prs.slide_layouts[0])
    slide.shapes.title.text = f"Run Summary: {trainee_name}"
    slide.placeholders[1].text = "Generated by Stat Planner"

    # Stats Over Time plot
    turns = list(range(1, len(history) + 1))
    fig, ax = plt.subplots()
    for stat in history[0]:
        values = [h[stat] for h in history]
        ax.plot(turns, values, label=stat.capitalize())
    ax.set_xlabel("Turn")
    ax.set_ylabel("Stat Value")
    ax.legend()
    buf = BytesIO()
    fig.savefig(buf, format='png')
    plt.close(fig)
    buf.seek(0)
    slide = prs.slides.add_slide(prs.slide_layouts[5])
    slide.shapes.title.text = "Stats Over Time"
    slide.shapes.add_picture(buf, Inches(1), Inches(1.5), width=Inches(8))

    # Gap to Ideal plot
    fig2, ax2 = plt.subplots()
    for stat in history[0]:
        gap_vals = [ideal_stats[stat] - h[stat] for h in history]
        ax2.plot(turns, gap_vals, label=stat.capitalize())
    ax2.set_xlabel("Turn")
    ax2.set_ylabel("Gap to Ideal")
    ax2.legend()
    buf2 = BytesIO()
    fig2.savefig(buf2, format='png')
    plt.close(fig2)
    buf2.seek(0)
    slide = prs.slides.add_slide(prs.slide_layouts[5])
    slide.shapes.title.text = "Gap to Ideal Over Time"
    slide.shapes.add_picture(buf2, Inches(1), Inches(1.5), width=Inches(8))

    # Trainee photo
    if trainee_photo_path:
        slide = prs.slides.add_slide(prs.slide_layouts[5])
        slide.shapes.title.text = "Trainee Photo"
        slide.shapes.add_picture(trainee_photo_path, Inches(3), Inches(2), width=Inches(4))

    prs.save("run_summary.pptx")
